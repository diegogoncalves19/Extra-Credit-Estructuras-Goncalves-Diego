/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import javax.swing.JOptionPane;

/**
 *
 * @author Diego Goncalves
 */
public class VerTienda extends javax.swing.JFrame {
    
    private int watts;
    private int regalos;
    private int amistad;
    private int pokemonescogido;
    private long totaltime;
    private long starttime;
    private String regalosstring;

    /**
     * Creates new form VerTienda
     */
    public VerTienda() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Volver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        ComprarItem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Volver.setBackground(new java.awt.Color(253, 202, 7));
        Volver.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        Volver.setText("VOLVER");
        Volver.setBorder(null);
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });
        getContentPane().add(Volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel1.setText("Los items que están en la tienda son:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 310, -1));

        jTextArea1.setBackground(new java.awt.Color(170, 209, 250));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("1.  Baya Aranja. Costo: 100 watts. Efecto: + 100 amistad.\n2.  Baya Caquic. Costo: 200 watts. Efecto: + 250 amistad.\n3.  Pokeball. Costo: 300 watts. Efecto: + 400 amistad.\n4.  Baya Zreza Costo: 400 watts. Efecto: + 550 amistad.\n5.  Baya Zanama. Costo: 500 watts. Efecto: + 700 amistad.\n6.  Baya Ziuela Costo: 600 watts. Efecto: + 850 amistad.\n7.  Baya Zidra. Costo: 700 watts. Efecto: + 1000 amistad.\n8.  Baya Enigma. Costo: 800 watts. Efecto: + 1150 amistad.\n9.  Caremelo Raro. Costo: 900 watts. Efecto: + 1300 amistad.");
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 500, 200));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel2.setText("Coloca el número del item que quieres comprar:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, -1, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 480, 40, -1));

        ComprarItem.setBackground(new java.awt.Color(253, 202, 7));
        ComprarItem.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        ComprarItem.setText("COMPRAR ITEM");
        ComprarItem.setBorder(null);
        ComprarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprarItemActionPerformed(evt);
            }
        });
        getContentPane().add(ComprarItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(506, 431, -1, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/8.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
        MenuPrincipal menu = new MenuPrincipal();
        System.out.println(regalosstring);
        menu.setWatts(getWatts());
        menu.setRegalos(getRegalos());
        menu.setAmistad(getAmistad());
        menu.setPokemonescogido(getPokemonescogido());
        menu.setStarttime(getStarttime());
        menu.setTotaltime(getTotaltime());
        menu.setRegalosstring(getRegalosstring());
        menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_VolverActionPerformed

    private void ComprarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprarItemActionPerformed
        int numeroitem = Integer.parseInt(jTextField1.getText());
        
        MostrarTienda(numeroitem, getRegalos(), getAmistad(), getWatts());
    }//GEN-LAST:event_ComprarItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerTienda().setVisible(true);
            }
        });
    }
    
    public void MostrarTienda(int scanner, int regalos, int amistad, int watts){
                
        switch (scanner) {
            case 1 -> {
                if (watts < 100) {
                    JOptionPane.showMessageDialog(null, "No tienes suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 100;
                    watts -= 100;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Baya Aranja" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 2 -> {
                if (watts < 200) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 250;
                    watts -= 200;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Baya Caquic" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 3 -> {
                if (watts < 300) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 400;
                    watts -= 300;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Pokeball" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 4 -> {
                if (watts < 400) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 550;
                    watts -= 400;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Baya Zreza" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 5 -> {
                if (watts < 500) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 700;
                    watts -= 500;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Baya Zanama" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 6 -> {
                if (watts < 600) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 850;
                    watts -= 600;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Baya Ziuela" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 7 -> {
                if (watts < 700) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 1000;
                    watts -= 700;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Baya Zidra" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 8 -> {
                if (watts < 800) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 1150;
                    watts -= 800;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Baya Enigma" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            case 9 -> {
                if (watts < 900) {
                    JOptionPane.showMessageDialog(null, "No tiene suficiente dinero para comprar este regalo.");
                }else{
                    regalos += 1;
                    amistad += 1300;
                    watts -= 900;
                    setRegalos(regalos);
                    setAmistad(amistad);
                    setWatts(watts);
                    regalosstring += "Caramelo raro" + "\n";
                    JOptionPane.showMessageDialog(null, "Item comprado con éxito.");
                }
            }
            default -> {
                JOptionPane.showMessageDialog(null, "Esa no es una opción para escoger.");
            }
        }
    }
    
    /**
     * @return the watts
     */
    public int getWatts() {
        return watts;
    }

    /**
     * @param watts the watts to set
     */
    public void setWatts(int watts) {
        this.watts = watts;
    }
    
    /**
     * @return the regalos
     */
    public int getRegalos() {
        return regalos;
    }

    /**
     * @param regalos the regalos to set
     */
    public void setRegalos(int regalos) {
        this.regalos = regalos;
    }
    
    /**
     * @return the amistad
     */
    public int getAmistad() {
        return amistad;
    }

    /**
     * @param amistad the amistad to set
     */
    public void setAmistad(int amistad) {
        this.amistad = amistad;
    }
    
    /**
     * @return the pokemonescogido
     */
    public int getPokemonescogido() {
        return pokemonescogido;
    }

    /**
     * @param pokemonescogido the pokemonescogido to set
     */
    public void setPokemonescogido(int pokemonescogido) {
        this.pokemonescogido = pokemonescogido;
    }
    
    /**
     * @return the lasttime
     */
    public long getTotaltime() {
        return totaltime;
    }

    /**
     * @param totaltime the lasttime to set
     */
    public void setTotaltime(long totaltime) {
        this.totaltime = totaltime;
    }
    
    /**
     * @return the starttime
     */
    public long getStarttime() {
        return starttime;
    }

    /**
     * @param starttime the starttime to set
     */
    public void setStarttime(long starttime) {
        this.starttime = starttime;
    }
    
    /**
     * @return the regalosstring
     */
    public String getRegalosstring() {
        return regalosstring;
    }

    /**
     * @param regalosstring the regalosstring to set
     */
    public void setRegalosstring(String regalosstring) {
        this.regalosstring = regalosstring;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ComprarItem;
    private javax.swing.JButton Volver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
